// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentEnrollmentSystem1.Data;

#nullable disable

namespace StudentEnrollmentSystem1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250415103911_AddTimetableEntries")]
    partial class AddTimetableEntries
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.Course", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Name");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.CourseEnrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DropDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EnrollmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<ulong>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(1ul);

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("StudentId", "CourseCode");

                    b.ToTable("CourseEnrollments");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.CourseOffering", b =>
                {
                    b.Property<string>("CourseCode")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("CurrentEnrollment")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Instructor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxEnrollment")
                        .HasColumnType("int");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("CourseCode");

                    b.HasIndex("CourseCode")
                        .IsUnique();

                    b.ToTable("CourseOfferings");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("PaymentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("AmountPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<ulong>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(0ul);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("StudentId");

                    b.HasIndex("Course");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.StudentEnquiry", b =>
                {
                    b.Property<int>("EnquiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EnquiryId"));

                    b.Property<string>("EnquiryType")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RespondedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("SubmissionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("EnquiryId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentEnquiries");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.Teacher", b =>
                {
                    b.Property<string>("TeacherId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TeacherId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.TeacherEvaluation", b =>
                {
                    b.Property<int>("EvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EvaluationId"));

                    b.Property<int>("AssessmentRating")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CommunicationRating")
                        .HasColumnType("int");

                    b.Property<int>("ContentRating")
                        .HasColumnType("int");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("InstructorName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsAnonymous")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("OverallRating")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("SubmissionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("TeachingRating")
                        .HasColumnType("int");

                    b.HasKey("EvaluationId");

                    b.HasIndex("StudentId");

                    b.ToTable("TeacherEvaluations");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.TimetableEntry", b =>
                {
                    b.Property<int>("TimetableEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TimetableEntryId"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TimeSlot")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TimetableEntryId");

                    b.HasIndex("StudentId");

                    b.ToTable("Timetables");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.CourseEnrollment", b =>
                {
                    b.HasOne("StudentEnrollmentSystem1.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.Payment", b =>
                {
                    b.HasOne("StudentEnrollmentSystem1.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.Student", b =>
                {
                    b.HasOne("StudentEnrollmentSystem1.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("Course")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.StudentEnquiry", b =>
                {
                    b.HasOne("StudentEnrollmentSystem1.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.TeacherEvaluation", b =>
                {
                    b.HasOne("StudentEnrollmentSystem1.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentEnrollmentSystem1.Models.TimetableEntry", b =>
                {
                    b.HasOne("StudentEnrollmentSystem1.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
