using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using StudentEnrollmentSystem1.Data;
using StudentEnrollmentSystem1.Data.Repositories;
using StudentEnrollmentSystem1.Models;
using System;
using System.Threading.Tasks;

namespace StudentEnrollmentSystem1.Pages.Student
{
    public class PaymentModel : PageModel
    {
        private readonly CourseRepository _courseRepository;
        private readonly StudentRepository _studentRepository;
        private readonly PaymentRepository _paymentRepository;

        public PaymentModel(
            CourseRepository courseRepository, 
            StudentRepository studentRepository,
            PaymentRepository paymentRepository)
        {
            _courseRepository = courseRepository;
            _studentRepository = studentRepository;
            _paymentRepository = paymentRepository;
        }

        [BindProperty(SupportsGet = true)]
        public string Course { get; set; }

        [BindProperty]
        public decimal Amount { get; set; }

        public Course CourseDetails { get; set; }

        public string StudentId { get; set; }
        public string StudentName { get; set; }
        public string StudentEmail { get; set; }
        public string ErrorMessage { get; set; }

        public async Task<IActionResult> OnGetAsync()
        {
            // Get course details from database
            CourseDetails = await _courseRepository.GetCourseByNameAsync(Course);

            if (CourseDetails == null)
            {
                CourseDetails = new Course { Name = Course, Fee = 0, Description = "Unknown Course" };
            }

            // Set the amount to the course fee
            Amount = CourseDetails.Fee;

            // Get student details from TempData (if coming from registration)
            if (TempData != null)
            {
                StudentId = TempData["StudentId"]?.ToString();
                StudentName = TempData["StudentName"]?.ToString();
                StudentEmail = TempData["Email"]?.ToString();

                // Preserve the values for the POST action
                TempData.Keep("StudentId");
                TempData.Keep("StudentName");
                TempData.Keep("Email");
            }

            return Page();
        }

        public async Task<IActionResult> OnPostAsync()
        {
            // Get student ID from TempData
            string studentId = TempData["StudentId"]?.ToString();
            if (string.IsNullOrEmpty(studentId))
            {
                ErrorMessage = "Student information not found. Please try again.";
                return Page();
            }

            // Process the payment
            var result = await _studentRepository.UpdatePaymentStatusAsync(studentId, Amount);
            if (!result)
            {
                ErrorMessage = "Payment processing failed. Please try again.";
                return Page();
            }
            
            // Create payment record
            try
            {
                string description = $"Course Fee Payment for {Course}";
                var payment = await _paymentRepository.CreatePaymentAsync(studentId, Amount, description);
                
                // Store payment ID in TempData for receipt
                TempData["PaymentId"] = payment.PaymentId;
                TempData["ReceiptNumber"] = payment.ReceiptNumber;
            }
            catch (Exception)
            {
                // Payment record creation failed, but student payment status was updated
                // We'll continue anyway since the core payment was processed
            }

            // Preserve student info for confirmation page
            TempData.Keep("StudentId");
            TempData.Keep("StudentName");
            TempData.Keep("Email");
            
            // Add success message
            TempData["SuccessMessage"] = $"Payment of â‚¹{Amount.ToString("N2")} for {StudentName} has been processed successfully.";

            // Redirect to a confirmation page
            return RedirectToPage("/Student/Confirmation");
        }
    }
}